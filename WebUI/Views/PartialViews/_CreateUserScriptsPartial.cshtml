<script>
    // Toastify fonksiyonunu genişletelim
    function showToast(message, type) {
        Toastify({
            text: message,
            duration: 3000,
            close: true,
            gravity: "top",
            position: "right",
            backgroundColor: type === 'error'
                ? "linear-gradient(to right, #FF416C, #FF4B2B)"
                : "linear-gradient(to right, #00b09b, #96c93d)",
            className: "rounded-lg shadow-lg",
            // Kapatma butonuna tıklandığında otomatik yönlendirmeyi iptal etmek için
            onClose: function() {
                clearTimeout(redirectTimeout);
            }
        }).showToast();
    }

    // Yönlendirme için bir değişken
    let redirectTimeout;

    // CreateUser form validation
    document.getElementById('createUserForm')?.addEventListener('submit', function (e) {
        e.preventDefault();

        let email = this.querySelector('input[name="Email"]').value;
        let role = this.querySelector('select[name="RoleId"]').value;

        // Validasyon kontrollerini bir fonksiyona dönüştürelim
        function validateForm() {
            if (!role) {
                showToast("Lütfen bir rol seçin", "error");
                return false;
            }

            if (!email) {
                showToast("Email adresi gereklidir", "error");
                return false;
            }

            if (!/^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/.test(email)) {
                showToast("Geçerli bir email adresi girin", "error");
                return false;
            }

            return true; // Validasyon başarılıysa true döndür
        }

        if (!validateForm()) {
            return; // Validasyon başarısızsa formu gönderme
        }

        // Form verilerini AJAX ile gönder
        fetch(this.action, {
            method: this.method,
            body: new FormData(this)
        })
        .then(response => {
            if (response.ok) {
                return response.json();
            } else {
                // Sunucudan gelen hata mesajını alalım
                return response.text().then(text => {
                    throw new Error(text || 'Form gönderilirken bir hata oluştu.');
                });
            }
        })
        .then(data => {
            // Başarılı yanıt durumunda işlemler
            showToast("Mail gönderme işlemi başarılı, kullanıcı listesi sayfasına yönlendiriliyorsunuz...", "success");

            // 2 saniye sonra UserList sayfasına yönlendir
            redirectTimeout = setTimeout(function() {
                window.location.href = '/User/UserList';
            }, 2000);
        })
        .catch(error => {
            console.error('Hata:', error);
            // Sunucudan gelen hata mesajını göster
            showToast(error.message, "error");
        });
    });
</script>